name: Tests

on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:
  workflow_dispatch:
    inputs:
      prerelease:
        description: 'Run a pre-release, testing the build'
        required: false
        type: boolean
        default: false

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        nox-session: ["tests"]
        include:
          - os: macos-latest
            python-version: "3.10"
            nox-session: "tests"
          - os: ubuntu-latest
            python-version: "3.10"
            nox-session: "lint"

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0
      - name: Configure Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: pip-${{ matrix.nox-session }}-${{ hashFiles('**/noxfile.py') }}
          restore-keys: |
            pip-${{ matrix.nox-session }}-
      - name: Cache nox session files
        uses: actions/cache@v3
        with:
          path: .nox
          key: nox-${{ matrix.nox-session }}-${{ hashFiles('**/noxfile.py') }}
          restore-keys: |
            nox-${{ matrix.nox-session }}-
      - name: Cache pre-commit environments
        if: ${{ matrix.nox-session == 'lint' }}
        uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            pre-commit-
      - name: Install nox
        run: |
          python -m pip install -U pip
          python -m pip install -U nox
      - name: Run tests
        run: python -m nox --non-interactive -s ${{ matrix.nox-session }}

  release:
    if: ${{ inputs.prerelease || startsWith(github.ref, 'refs/tags/') }}
    needs: tests
    uses: dfm/workflows/.github/workflows/python-release.yml@main
    with:
      wheels: false
      enable-windows: false
    secrets:
      pypi-token: ${{ secrets.pypi_password }}
